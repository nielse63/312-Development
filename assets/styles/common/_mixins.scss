
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}
	@return $number;
}

// border radius
@mixin border-radius($value) {
	@if type-of($value) == 'number' and unitless($value) {
		$value: $value + px;
	}
	border-radius: $value;
	background-clip: padding-box;
}

@mixin size($width, $height: $width) {
	@if type-of($width) == 'number' and unitless($width) {
		$width: $width + px;
	}
	@if type-of($height) == 'number' and unitless($height) {
		$height: $height + px;
	}

	width: $width;
	height: $height;
}

@mixin micro-clearfix() {
	content: '';
	clear: both;
	display: table-cell;
}

@mixin content-link($background, $color: $global-font-color) {
	box-shadow: 0 -3px 0 0 $background inset;
	// color: transparent;
	color: inherit;
	display: inline-block;
	padding-left: 0.2em;
	padding-right: 0.2em;
	position: relative;
	perspective: 1000px;
	perspective-origin: bottom center;
	transition: 0.35s background-color,
				0.35s color;
	will-change: background-color, color;
	contain: paint;
	transform: translate3d(0, 0, 0);
	// backface-visibility: hidden;

	&:before {
		content: '';
		position: absolute;
		background-color: $background;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		transform-style: preserve-3d;
		transform-origin: bottom center;
		transition: 0.5s transform;
		transform: rotateX(90deg);
		will-change: transform;
		// backface-visibility: hidden;
	}

	&:after {
		content: attr(data-text);
		position: absolute;
		top: 50%;
		left: 50%;
		width: 100%;
		transform: translate(-50%, -50%);
		text-align: center;
		will-change: color;
		transition: 0.1s color 0.25s;
		// color: $color;
		// backface-visibility: hidden;
	}

	&:hover {
		&:before {
			transform: rotateX(0deg);
		}

		&:after {
			color: $color-white;
			transition-delay: 0.1s;
		}
	}
}
