
// Name:            Form
//
// Description:     Defines styles for forms
//
// Component:       `.form`
//
// Sub-objects:     `.form-row`
//                  `.form-help-inline`
//                  `.form-help-block`
//                  `.form-label`
//                  `.form-controls`
//                  `.form-controls-condensed`
//                  `.form-icon`
//
// Modifiers:       `.form-stacked`
//                  `.form-horizontal`
//
// Sub-modifiers:   `.form-danger`
//                  `.form-success`
//                  `.form-small`
//                  `.form-large`
//                  `.form-controls-text`
//

// ========================================================================
// Variables
// ========================================================================

$form-height: 40px;
$form-padding: 10px;
$form-border-color: #dcdcdc;
$form-border-width: $global-border-width;
$form-background: $color-white;
$form-color: $global-font-color;
$form-font-size: $global-font-size;
$form-line-height: strip-unit( $form-height - ($form-border-width * 2) ) / strip-unit( $form-font-size );

$form-focus-border: #99baca;
$form-focus-background: #f5fbfe;
$form-focus-color: $form-color;

$form-disabled-border: #dbdbdb;
$form-disabled-background: #fcfcfc;
$form-disabled-color: $form-disabled-border;

$form-placeholder-color: $global-muted-color;
$form-gutter: 15px;

$form-legend-border: $global-border-color;
$form-legend-border-width: $global-border-width;
$form-legend-font-size: $global-font-size-block-title;
$form-legend-line-height: $global-line-height-block-title;

// Size Modifiers
$form-large-height: 40px;
$form-large-font-size: $global-font-size-large;
$form-large-line-height: strip-unit($form-large-height - ($form-border-width * 2)) / strip-unit($form-large-font-size);
$form-large-padding: 8px 6px;

$form-small-height: 24px;
$form-small-font-size: $global-font-size-small;
$form-small-line-height: strip-unit($form-small-height - ($form-border-width * 2)) / strip-unit($form-small-font-size);
$form-small-padding: 3px 3px;

// Validation States
$form-danger-border: #dc8d99;
$form-danger-background: #fff7f8;
$form-danger-color: $color-danger-text;

$form-success-border: #8ec73b;
$form-success-background: #fafff2;
$form-success-color: $color-success-text;

$form-help-inline-margin-left: 10px;
$form-help-block-margin-top: 5px;

$form-controls-condensed-margin-vertical: 5px;
$form-stacked-margin-bottom: 5px;
$form-stacked-font-weight: bold;

$form-horizontal-label-width: 200px;
$form-horizontal-label-margin-top: 5px;
$form-horizontal-controls-margin-left: 215px;

$form-icon-width: 30px;
$form-icon-font-size: $global-font-size;

$distance-to-edges: 4px;
$input-radio-checkbox-size: 18px;
$input-background-color: $color-white;
$checkbox-check-color: $color-primary;
$radio-check-color: $color-primary;

// ========================================================================
// Component: Form
// ========================================================================

input,
select,
textarea {
	margin: 0;
	@include border-radius(0);
	font: inherit;
	color: inherit;
	border: $form-border-width solid $form-border-color;
	background-color: $form-background;

	// Focus
	&:focus {
		outline: 0;
	}
}

// Vertical alignment
input,
select {
	vertical-align: middle;
}

// Address inconsistent `.text-transform` inheritance which is only inherit in Firefox
select {
	text-transform: none;
}

optgroup {
	font: inherit;
	font-weight: bold;
}


input {

	// Removes inner padding and border in Firefox 4+.
	&::-moz-focus-inner {
		border: 0;
		padding: 0;
	}
}


input {

	// Remove inner padding and search cancel button in Chrome, Safari and Opera on OS X.
	&[type="search"] {
		&::-webkit-search-cancel-button,
		&::-webkit-search-decoration {}
	}

	// Remove button on `.number` input
	&[type="number"] {
		&::-webkit-inner-spin-button,
		&::-webkit-outer-spin-button {
			appearance: none;
			margin: 0;
		}
	}
}

// Define consistent border, margin, and padding.
fieldset {
	border: 0;
	margin: 0;
	padding: 0;
}

textarea {
	overflow: auto;
	vertical-align: top;
	// min-height: 150px;
	resize: none;
}

// Removes placeholder transparency in Firefox.
::-moz-placeholder {
	opacity: 1;
}

// Removes `.box-shadow` for invalid controls in Firefox.
:invalid {
	box-shadow: none;
}

::-ms-clear {
	display: none;
}

input:-webkit-autofill {
	box-shadow: inset 0 0 0px 9999px $form-background;
}

// Style
// ========================================================================

// Remove margin from the last-child
form > {
	:last-child {
		margin-bottom: 0;
	}
}
&:-ms-input-placeholder {
	color: $form-placeholder-color !important;
}
&::-moz-placeholder {
	color: $form-placeholder-color;
}
&::-webkit-input-placeholder {
	color: $form-placeholder-color;
}
&:disabled {
	&:-ms-input-placeholder {
		color: $form-disabled-color !important;
	}
	&::-moz-placeholder {
		color: $form-disabled-color;
	}
	&::-webkit-input-placeholder {
		color: $form-disabled-color;
	}
}

// Controls
// Expand width to container of [class*="col-"]
select,
textarea,
input:not([type]),
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
	[class*="col-"] > & {
		width: 100%;
		display: block;
	}
}
select,
textarea,
input {
	height: $form-height;
	max-width: 100%;
	// padding: $form-padding;
	color: $form-color;
	display: inline-block;
	transition: all linear 200ms;
	width: 100%;
	// line-height: (strip-unit( $form-height ) - strip-unit( $form-border-width ) * 2 - strip-unit( $form-padding ) * 2) / strip-unit( $form-font-size );

	border: 0;
	border-bottom: 2px solid $form-border-color;
	font-size: 18px;
	height: 44px;
	line-height: 1;
	padding: 10px 5px;

	// .form-error & {
	// 	border-color: $color-danger;
	// }

	// .form-valid & {
	// 	border-color: $color-success;
	// }

	// Focus state
	// &:focus {
	// 	border-color: $form-focus-border;
	// 	// background-color: $form-focus-background;
	// 	color: $form-focus-color;
	// }

	// Disabled state
	&:disabled {
		border-color: $form-disabled-border;
		background-color: $form-disabled-background;
		color: $form-disabled-color;
	}
}

// textarea
// textarea {
// 	padding-top: ($form-padding * 1.5);
// 	padding-bottom: ($form-padding * 1.5);
// }

// Legend
legend {
	width: 100%;
	border: 0;
	padding: 0;
	padding-bottom: $form-gutter;
	font-size: $form-legend-font-size;
	line-height: strip-unit($form-legend-line-height) / strip-unit($form-legend-font-size);

	&:after {
		content: "";
		display: block;
		border-bottom: $form-legend-border-width solid $form-legend-border;
		width: 100%;
	}
}

// Reset height
// Must be after size modifiers
// ========================================================================

// textarea,
select[multiple],
select[size] {
	height: auto;
}

// Sub-objects: `.label`
// ========================================================================

label {
	display: inline-block;
	vertical-align: middle;
	cursor: pointer;
	position: relative;

	text-transform: uppercase;
	font-size: 14px;
	font-weight: 700;
}

.form-list {

	&,
	ul {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	li {
		position: relative;
	}

	> li {
		display: flex;
		flex-direction: column;

		+ li {
			margin-top: $global-gutter-large;
		}

		> label {
			&:first-child {
				margin-bottom: 15px;
				border-bottom: 1px solid rgba(0, 0, 0, 0.1);
			}
		}
	}
}

input,
select,
textarea {

	&.error {
		color: $color-danger-text;
		// border: 1px solid $color-danger-text;
	}

	// &.valid {
	// 	border: 1px solid $color-success-text;
	// }
}

// .inputfile {
// 	position: absolute;
// 	overflow: hidden;
// 	opacity: 0;
// 	padding: 0;
// 	margin: 0;
// 	top: 0;
// 	left: 0;
// 	z-index: 1;
// 	cursor: pointer;
// 	@include size(100%);

// 	// Hover state
// 	&:hover {
// 		+ label {
// 			border-color: $form-focus-border;
// 			background-color: $form-focus-background;
// 			color: $form-focus-color;
// 		}
// 	}

// 	+ label {
// 		color: inherit;
// 		max-width: 100%;
// 		font-size: $form-font-size;
// 		text-overflow: ellipsis;
// 		white-space: nowrap;
// 		display: inline-block;
// 		overflow: hidden;
// 		text-transform: none;
// 		padding: $form-padding;
// 		display: inline-flex;
// 		align-items: center;
// 		border: $form-border-width solid $form-border-color;
// 		background-color: $form-background;
// 		transition: all linear 200ms;

// 		svg {
// 			width: 1em;
// 			height: 1em;
// 			vertical-align: middle;
// 			fill: $form-color;
// 			margin-right: $global-gutter / 2;
// 		}
// 	}
// }

// .select2 {
// 	&-container {
// 		.select2-selection {
// 			&--single {
// 				height: $form-height;
// 				@include border-radius(0);
// 				border: $form-border-width solid $form-border-color;
// 				background-color: $form-background;
// 				color: $form-color;

// 				.form-error & {
// 					border-color: $color-danger;
// 				}

// 				.form-valid & {
// 					border-color: $color-success;
// 				}
// 			}
// 		}

// 		&--default {
// 			.select2-selection {
// 				&--single {
// 					.select2-selection__rendered {
// 						line-height: $form-height - ($form-border-width * 2);
// 					}
// 				}
// 			}
// 		}
// 	}
// }

// .select2-container--default .select2-selection--single .select2-selection__arrow {
// 	top: 50%;
// 	transform: translate(0, -45%);
// }

@keyframes errorLabelAnimation {
	from {
		transform: rotateX(-90deg);
	}
	to {
		transform: rotateX(0deg);
	}
}

@keyframes errorLabelAnimationReverse {
	from {
		transform: rotateX(0deg);
	}
	to {
		transform: rotateX(-90deg);
	}
}

.form {
	&-footer {
		* + & {
			margin-top: $global-gutter-large;
		}
	}

	&-error {
		label.error {
			color: $color-danger-text;
			font-size: 12px;
			position: absolute;
			top: 100%;
			white-space: nowrap;
			right: 0;
			transform-origin: top center;
			animation: 0.5s errorLabelAnimation forwards;
		}

		.input-wrapper {
			&:before {
				background-color: $color-danger-text;
				width: 100%;
			}
		}
	}

	&-valid {

		label.error {
			animation-name: errorLabelAnimationReverse;
		}

		.input-wrapper {
			&:after {
				width: 100%;
			}
		}
	}
}

.checkboxes,
.radios {
	display: flex;
	align-items: center;

	> li {
		flex: 0 1 auto;
		margin-right: $global-gutter;
		display: flex;
		align-items: center;

		input {
			max-width: 24px;
		}

		label {
			display: block;
			line-height: 1;
			font-weight: 400;
			text-transform: none;
		}

		> * {
			flex: 1 0 auto;

			+ * {
				margin-left: 5px;
			}
		}
	}
}

.checkbox {
	display: block;
	@include size(20px);
	@include border-radius(0);
	border: $form-border-width solid $form-border-color;
	background-color: $form-background;
	position: relative;

	&:before {
		position: absolute;
		content: '';
		transition: .3s cubic-bezier(.68,-.55,.265,1.55);
		bottom: 3px;
		left: 5px;
		width: 7px;
		height: 13px;
		transform: rotate(45deg) scale(0);
		border-right: 3px solid $color-orange;
		border-bottom: 3px solid $color-orange;
		@include border-radius(2px);
		background-clip: padding-box;
	}

	&.checked {
		&:before {
			transform: rotate(45deg) scale(1);
		}
	}

	&.disabled {
		opacity: 0.75;
		background-color: $color-gray;
	}

	> input {
		position: absolute;
		display: block;
		@include size(100%);
		top: 0;
		left: 0;
		z-index: 1;
		cursor: pointer;
		opacity: 0;
	}
}

.radio {
	display: block;
	@include size(20px);
	@include border-radius(50%);
	border: $form-border-width solid $form-border-color;
	background-color: $form-background;
	position: relative;

	&:before {
		top: 4px;
		right: 4px;
		bottom: 4px;
		left: 4px;
		transform: scale(0);
		border-radius: 100%;
		background-color: $color-orange;
		background-clip: padding-box;
		position: absolute;
		content: '';
		transition: .3s cubic-bezier(.68,-.55,.265,1.55);
	}

	&.checked {
		&:before {
			transform: scale(1);
		}
	}

	&.disabled {
		opacity: 0.75;
		background-color: $color-gray;
	}

	> input {
		position: absolute;
		display: block;
		@include size(100%);
		top: 0;
		left: 0;
		z-index: 1;
		cursor: pointer;
		opacity: 0;
	}
}

.form {
	contain: paint;

	> ul {
		> li {
			+ li {
				margin-top: 15px;
			}
		}
	}
}

.input {
	&-wrapper {
		position: relative;
		perspective-origin: calc(100% - 70px) 100%;
		perspective: 100vh;
		// contain: paint;

		&:before,
		&:after {
			content: '';
			position: absolute;
			bottom: 0;
			left: 0;
			width: 0;
			height: 2px;
			background-color: $color-blue;
			transition: 0.5s width;
			will-change: width;
		}

		&:after {
			background-color: $color-success;
		}

		&.focus {
			&:before {
				width: 100%;
			}
		}
	}
}
