[{"title":"Chicago.js","publishedDate":"Mon, 14 Sep 2015 14:50:58 +0000","content":"<p class=\"article-lead\">Chicago.js is a small, fast JavaScript library built specifically with front-end and user-experience developers in mind.</p>\r\n\r\n\r\n<hr />\r\n\r\nPrimarily, the library is a collection of useful utility and cross-browser support functions, allowing for quicker and easier development it fewer bugs and cross-browser/device issues.\r\n\r\nThere are several stated goals for Chicago.js:\r\n<ol>\r\n\t<li>To be fast, lightweight, and easily deployable</li>\r\n\t<li>To create and allow for a consistent cross-browser/device experience</li>\r\n\t<li>To be modular and extendable - creating a plugin for the library should be easy</li>\r\n\t<li>To always be reliable through rigorous testing</li>\r\n\t<li>To allow for easy contribution in the spirit of open-source software</li>\r\n</ol>","excerpt":"Chicago.js is a small, fast JavaScript library built specifically with front-end and user-experience...","category":"open-source","links":["Homepage: https://nielse63.github.io/Chicago/","API Docs: https://nielse63.github.io/Chicago/docs.html","Repository: https://github.com/nielse63/Chicago","Releases: https://github.com/nielse63/Chicago/releases"],"shortLink":"http://goo.gl/YDpTdr","id":"1MsMI3xho84i2saSEMqUuS","slug":"chicago-js"},{"title":"grunt-chicago","publishedDate":"Tue, 15 Sep 2015 23:33:59 +0000","content":"<p class=\"article-lead\">A Grunt plugin to handle JavaScript file imports.</p>\r\n\r\n\r\n<hr />\r\n\r\nA Grunt plugin to handle JavaScript file imports. Add an <code>// @import</code> statement in your project's JavaScript files to inject the content from one file into another.\r\n<p class=\"article-lead\">Basic usage.</p>\r\n\r\n\r\n<hr />\r\n\r\nIn your project's Gruntfile, add a section named<span style=\"font-family: monospace;\"> <span class=\"lang:default decode:true crayon-inline\">chicago</span> </span>to the data object passed into <span class=\"lang:js decode:true crayon-inline \">grunt.initConfig()</span> :\r\n<pre class=\"lang:js decode:true \">runt.initConfig({\r\n\tchicago: {\r\n\t\toptions : {\r\n\t\t\t// Options for all targets\r\n\t\t},\r\n\t\tyour_target : {\r\n\t\t\t// Target-specific file lists and/or options go here.\r\n\t\t},\r\n\t\tsecond_target : {\r\n\t\t\toptions : {\r\n\t\t\t\t// Target-specific options\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n});</pre>\r\nTo inject or import files in your project, add a line that contains the following to any JavaScript file:\r\n<pre class=\"lang:js decode:true\">// @import path/to/import.js</pre>\r\nSet just the source files to overwrite the existing import statement:\r\n<pre class=\"lang:js decode:true \">grunt.initConfig({\r\n\tchicago: {\r\n\t\tfiles: {\r\n\t\t\tsrc : [\r\n\t\t\t\t'src/file1.js',\r\n\t\t\t\t'src/file2.js'\r\n\t\t\t]\r\n\t\t},\r\n\t},\r\n});</pre>\r\n&nbsp;","excerpt":"A Grunt plugin to handle JavaScript file imports. A Grunt plugin to handle JavaScript file imports....","category":"open-source","links":["Download: https://github.com/nielse63/grunt-chicago/archive/master.zip","Homepage/Docs: https://nielse63.github.io/grunt-chicago/","Demo: https://nielse63.github.io/grunt-chicago/#usage","Repository: https://github.com/nielse63/grunt-chicago/"],"shortLink":"http://goo.gl/Slmk5b","id":"1tUXBVEFtyWEaM0E6MEOmq","slug":"grunt-chicago"},{"title":"Creating a Front End Framework","publishedDate":"Tue, 15 Sep 2015 04:48:34 +0000","content":"Recently we launched <a href=\"http://ui.cliquestudios.com/\" target=\"_blank\">Clique.UI</a>, a lightweight, modular front-end framework for rapid web-interface development. This is the first product that we’ve publicly released with full-documentation, and couldn’t be more excited about it.\r\n\r\nAfter a lot of work and even more testing, we’re calling this release version 1.1.0 – and there will be many more to come. What’s even more exciting about Clique.UI is that we’ve decided to open it up to the public, and make it a completely open-source under the <a href=\"http://opensource.org/licenses/MIT\" target=\"_blank\">MIT license</a> and <a href=\"https://github.com/CliqueStudios/Clique.UI\" target=\"_blank\">hosted on GitHub</a>. We’ll be monitoring this repository closely, so if you find any bugs or want to see a new feature, log it in the <a href=\"https://github.com/CliqueStudios/Clique.UI/issues\" target=\"_blank\">repo’s issue tracker</a>.\r\n\r\n<hr />\r\n\r\n<a href=\"http://cliquestudios.com/creating-a-front-end-framework/\" target=\"_blank\">Read the full article at Clique University</a>.\r\n\r\n&nbsp;","excerpt":"Recently we launched Clique.UI, a lightweight, modular front-end framework for rapid web-interface d...","category":"articles","links":["Original Article: http://cliquestudios.com/creating-a-front-end-framework/"],"shortLink":"http://goo.gl/rL0xrb","id":"3xW1rkJ3uwiyAsaqkOGC68","slug":"creating-a-front-end-framework"},{"title":"ResizeEnd Featured on UnHeap","publishedDate":"Tue, 15 Sep 2015 04:51:03 +0000","content":"<p class=\"article-lead\"><a href=\"https://nielse63.github.io/jquery.resizeend\" target=\"_blank\">ResizeEnd</a> was recently featured on UnHeap's roundup of popular jQuery plugins.</p>\r\n\r\n\r\n<hr />\r\n\r\nCheck out more plugins at <a href=\"http://www.unheap.com/\" target=\"_blank\">UnHeap</a>.\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;","excerpt":"ResizeEnd was recently featured on UnHeap's roundup of popular jQuery plugins. Check out more plugin...","category":"articles","links":["Original Article: http://www.unheap.com/other/browser-tweaks/resizeend/","UnHeap Homepage: http://www.unheap.com/"],"shortLink":"http://goo.gl/59Rgxi","id":"16i5mydz7CU2OUkCgYsG40","slug":"resizeend-featured-on-unheap"},{"title":"php-image-cache","publishedDate":"Tue, 15 Sep 2015 23:33:42 +0000","content":"<p class=\"article-lead\">A simple PHP class that compresses images on-the-fly to reduce load time and web-page resource management.</p>\r\n\r\n\r\n<hr />\r\n\r\nImage Cache is a tiny PHP class that accepts a .png, .jpg, or .gif image then compresses, moves, and caches the image in the user's browser. It then returns the new source of the image to be printed in an image tag.\r\n\r\nBy compressing and caching images, page load time can be dramatically decreased. Page load time is <a href=\"http://googleresearch.blogspot.com/2009/06/speed-matters.html\" target=\"_blank\">one of the biggest factors in user retention</a> and we've <a href=\"http://www.peer1.com/knowledgebase/how-slow-website-impacts-your-visitors-and-sales\" target=\"_blank\">all</a> <a href=\"http://blog.kissmetrics.com/loading-time/\" target=\"\">seen</a> <a href=\"http://www.forbes.com/sites/rogerdooley/2012/12/04/fast-sites/\" target=\"_blank\">the studies</a> on how load time affects a companies bottom line. However, when trying to calculate for these factors I was hard pressed to find a simple and direct PHP class to cache and load images. So I made one.\r\n\r\nHere's an example of the difference that this class can make. Below, on the left, is a screenshot of a large .png file on a local test environment being loaded in 2.19 seconds. On the right is the screenshot taken after the script was run and the image was compressed and cached, being loaded within 23 milliseconds. As a result of the script, image load time was reduced by 2167 milliseconds – that's a 98.95% reduction in resource load time!","excerpt":"A simple PHP class that compresses images on-the-fly to reduce load time and web-page resource manag...","category":"open-source","links":["Download: https://github.com/nielse63/php-image-cache/archive/master.zip","Homepage: https://nielse63.github.io/php-image-cache/","Docs: https://nielse63.github.io/php-image-cache/docs/classes/ImageCache.html","Repository: https://github.com/nielse63/php-image-cache/"],"shortLink":"http://goo.gl/wkUIFN","id":"4F9v3mmSOsUawQcOYKkIG8","slug":"php-image-cache"},{"title":"CSS Standardization","publishedDate":"Tue, 15 Sep 2015 04:47:57 +0000","content":"I first got interested in how to \"properly\" order CSS properties when, about a year ago, I stumbled across <a href=\"http://csscomb.com/\" target=\"_blank\">CSS Comb</a> and have since been following the practices of industry leaders like <a href=\"http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/\" target=\"_blank\">Harry Clark</a> and <a href=\"https://github.com/necolas/idiomatic-css\" target=\"_blank\">Nicholas Gallagher</a> and their methodologies for CSS syntax styling. However, the accepted consensus is that there is no \"real\" or \"proper\" way to order CSS properties. But when someone like Chris Coyier <a href=\"http://css-tricks.com/poll-results-how-do-you-order-your-css-properties/\" target=\"_blank\">admits that even he order his CSS properties at random</a> I began thinking \"What <em>really</em> would be the best approach to CSS Standardization?\"\r\n\r\nTaking my own advice I've laid out a new proposal for CSS property order standardization, based largely on <a href=\"http://www.w3schools.com/css/css_boxmodel.asp\" target=\"_blank\">the Box Model</a>, <a href=\"https://github.com/stubbornella/oocss/wiki\" target=\"_blank\">Object Oriented CSS</a>, a few suggestions from <a href=\"http://markdotto.com/2011/11/29/css-property-order/\" target=\"_blank\">Mark Otto's blog</a>, and an original thought of my own here and there.\r\n\r\n<hr />\r\n\r\n<a href=\"https://github.com/nielse63/CSS-Standardization/wiki/Proposal-for-Standardizing-CSS-Property-Ordering\" target=\"_blank\">Read the full article at the GitHub Wiki</a>.\r\n\r\n&nbsp;","excerpt":"I first got interested in how to \"properly\" order CSS properties when, about a year ago, I stumbled...","category":"articles","links":["Full Article: https://github.com/nielse63/CSS-Standardization/wiki/Proposal-for-Standardizing-CSS-Property-Ordering","Repository: https://github.com/nielse63/CSS-Standardization"],"shortLink":"http://goo.gl/vDyzDa","id":"5R3KSMGRhKwcCWIsmMqKqQ","slug":"css-standardization"},{"title":"PHP-Image-Cache Featured on WebResourcesDepot","publishedDate":"Tue, 15 Sep 2015 04:51:34 +0000","content":"<p class=\"article-lead\">Caching and compression of every kb served has a huge effect on site performance.</p>\r\n\r\n\r\n<hr />\r\n\r\n<strong><a href=\"https://nielse63.github.io/php-image-cache/\" target=\"_blank\">Image Cache</a></strong> is a lightweight <strong>PHP class</strong> that <strong>compresses, moves, and caches the image</strong> in the user’s browser.  After that, it returns the new source of the image to be printed in an image tag which results in a serious gain on load time.  The class works by simply setting options like the directory, the base URL, etc. and calling a compress function for each image.\r\n\r\n<hr />\r\n\r\n<a href=\"http://webresourcesdepot.com/php-image-cache-compression-caching-for-images/\" target=\"_blank\">Read the full article on WebResourcesDepot</a>.\r\n\r\n&nbsp;","excerpt":"Caching and compression of every kb served has a huge effect on site performance. Image Cache is a l...","category":"articles","links":["Original Article: http://webresourcesdepot.com/php-image-cache-compression-caching-for-images/"],"shortLink":"http://goo.gl/RtWJdy","id":"3tnu9yIutOAQum2qgKgWWk","slug":"php-image-cache-featured-on-webresourcesdepot"},{"title":"jquery.transition","publishedDate":"Tue, 15 Sep 2015 23:33:13 +0000","content":"<p class=\"article-lead\">A custom event that fires at various times during the transition of an element.</p>\r\n\r\n\r\n<hr />\r\n\r\nBasic usage:\r\n<pre class=\"lang:js decode:true\">$(selector).on('transition', {\r\n\r\n\t// options.start - This method is executed when the element\r\n\t// begins transitioning, and is only executed once per\r\n\t// transition property\r\n\t// ***\r\n\t// Parameters:\r\n\t//   property[string] - the value of the CSS property that began to transition\r\n\tstart : function( property ) {\r\n\t\t// ...\r\n\t},\r\n\r\n\t// options.progress - This method after the element has\r\n\t// begun transitioning, and fires every 15ms until\r\n\t// the transition is complete.\r\n\t// ***\r\n\t// Parameters:\r\n\t//   property[string] - the value of the CSS property that is currently transitioning\r\n\t//   duration[integer] - the amount of time, in milliseconds, since the transition started\r\n\t//   value[float|integer|string] - the current value of the CSS property currently transitioning\r\n\tprogress : function( property, duration, value ) {\r\n\t\t// ...\r\n\t},\r\n\r\n\t// options.complete - This method is executed once\r\n\t// the transition has completed.\r\n\t// ***\r\n\t// Parameters:\r\n\t//   property[string] - the value of the CSS property that finished transitioning\r\n\tcomplete : function( property ) {\r\n\t\t// ...\r\n\t}\r\n},\r\n\r\n\t// Event Callback - This callback function is\r\n\t// executed after all initial CSS transition-property\r\n\t// values have completed their transition phase. If\r\n\t// the event is unbound prior to that moment, this\r\n\t// callback will never be executed.\r\n\t// ***\r\n\t// Parameters:\r\n\t//   event[jQuery Event] - The default jQuery Event created during during initial setup\r\n\tfunction( evt ) {\r\n\t\t// ...\r\n});</pre>\r\nTo see <a href=\"https://nielse63.github.io/jquery.transition/\" target=\"_blank\">jquery.transition</a> in action, <a href=\"https://nielse63.github.io/jquery.transition/\" target=\"_blank\">check out the homepage on GitHub pages</a>.","excerpt":"A custom event that fires at various times during the transition of an element. Basic usage: To see...","category":"open-source","links":["Download: https://github.com/nielse63/jquery.transition/archive/master.zip","Homepage/Docs: https://nielse63.github.io/jquery.transition/","Demo: https://nielse63.github.io/jquery.transition/#demo","Repository: https://github.com/nielse63/jquery.transition/"],"shortLink":"http://goo.gl/0M72Re","id":"58FjegmWacyQOeeAU8qAew","slug":"jquery-transition"},{"title":"jquery.resizeend","publishedDate":"Mon, 14 Sep 2015 15:10:49 +0000","content":"<p class=\"article-lead\">A custom event that fires when a user stops resizing their browser.</p>\r\n\r\n\r\n<hr />\r\n\r\nTo see <a href=\"https://github.com/nielse63/jquery.resizeend/\" target=\"_blank\">jquery.resizeend</a> in action, <a href=\"https://nielse63.github.io/jquery.resizeend/\" target=\"_blank\">check out the homepage on GitHub pages</a>.\r\n\r\n&nbsp;","excerpt":"A custom event that fires when a user stops resizing their browser. To see jquery.resizeend in actio...","category":"open-source","links":["Download: https://github.com/nielse63/jquery.resizeend/archive/master.zip","Homepage/Docs: https://nielse63.github.io/jquery.resizeend/","Demo: https://nielse63.github.io/jquery.resizeend/#demo","Repository: https://github.com/nielse63/jquery.resizeend/"],"shortLink":"http://goo.gl/Uv9DSj","id":"5so1XC2u9aYO8YiSecs8SC","slug":"jquery-resizeend"},{"title":"How to Speed Up WordPress Without a Plugin","publishedDate":"Tue, 15 Sep 2015 04:52:05 +0000","content":"<p class=\"article-lead\">Page load time should always be one of the primary focuses of any member of a team or company building an online project.</p>\r\n\r\n\r\n<hr />\r\n\r\nThe evidence showing [how page load time affects sales] and traffic is insurmountable, and its side effects (including the [impact on SEO] and ability to include more [bleeding-edge front-end technology]) should never be overlooked. Despite the wide availability of caching plugins, modules, and other scripts that can be included while a building a client’s site, the employ of the native [WP_Cache class]among plugin and theme developers seems greatly overlooked.\r\n\r\nWhen learning how to increase the speed of your WordPress theme or plugin, using the WP_Cache class can give you a quick and easy solution with measurable results, while still maintaining the malleability of your custom queries. Of course, however, we’ll want to understand the how and why we should be using WP_Cache in our themes and plugins at all, which is far simpler than you might assume. Each database query takes time to execute, and over the course of a page loading several dozen (if not hundred) queries to your database could be firing off all at once. This puts weight on the servers response to your user, who you want to show your content and media to as quickly as possible. Now, lets compound these executions per user, and if you check your site’s analytics often enough, you’ll understand why this is important. Assuming you receive moderate to heavy site traffic, during peak usage time you could be executing hundreds of a thoughts of queries per minute, which, if you aren’t using a decent caching mechanism, can leave a lot of your users with a poor experience.\r\n\r\n<hr />\r\n\r\n<a href=\"https://codegeekz.com/how-to-speed-up-your-wordpress-site-without-a-plugin/\" target=\"_blank\">Read the full article on CodeGeekz</a>","excerpt":"Page load time should always be one of the primary focuses of any member of a team or company buildi...","category":"articles","links":["Original Article: https://codegeekz.com/how-to-speed-up-your-wordpress-site-without-a-plugin/","Comments: https://codegeekz.com/how-to-speed-up-your-wordpress-site-without-a-plugin/#disqus_thread"],"shortLink":"http://goo.gl/XrJUnx","id":"7c6YjiG78AaoaksaYcCCW","slug":"how-to-speed-up-wordpress-without-a-plugin"},{"title":"Using require.js with WordPress","publishedDate":"Tue, 15 Sep 2015 04:50:06 +0000","content":"<p class=\"article-lead\">Recently I've been digging into <a href=\"http://requirejs.org/\" target=\"_blank\">require.js</a> a lot – a JavaScript library that conditionally loads external elements (like plugins or libraries) based on need.</p>\r\n\r\n\r\n<hr />\r\n\r\nIt's been a great tool to have in my front-end toolbox, as it allows me to call up plugins only when I need them, thus <a href=\"http://codegeekz.com/?s=performance\" target=\"_blank\">increasing the performance</a> of the site that I’m working on as well as minimizing the potential of running into conflicts or bugs from scripts not written by myself.\r\n\r\nIt's been fine for local, flat development because the folder and URL structure of these initial builds is always fairly predictable.  However, using require.js with a WordPress build can be a little more tricky as your URL and directory structure may become a little more unpredictable, but there is a quick and easy workaround that allows you to use this invaluable library in your project.\r\n\r\n<hr />\r\n\r\n<a href=\"https://codegeekz.com/using-require-js-with-wordpress/\" target=\"_blank\">Read the full article on CodeGeekz</a>","excerpt":"Recently I've been digging into require.js a lot – a JavaScript library that conditionally loads ext...","category":"articles","links":["Original Article: https://codegeekz.com/using-require-js-with-wordpress/","Comments: https://codegeekz.com/using-require-js-with-wordpress/#disqus_thread"],"shortLink":"http://goo.gl/oNZ7JS","id":"Eqfn05Dp5eeK24ggCSA20","slug":"using-require-js-with-wordpress"},{"title":"jquery.resizestart","publishedDate":"Tue, 15 Sep 2015 23:32:30 +0000","content":"<p class=\"article-lead\">A custom event that fires when a user begins resizing their browser.</p>\r\n\r\n\r\n<hr />\r\n\r\nTo see <a href=\"https://github.com/nielse63/jquery.resizestart/\" target=\"_blank\">jquery.resizestart</a> in action, <a href=\"https://nielse63.github.io/jquery.resizestart/\" target=\"_blank\">check out the homepage on GitHub pages</a>.","excerpt":"A custom event that fires when a user begins resizing their browser. To see jquery.resizestart in ac...","category":"open-source","links":["Download: https://github.com/nielse63/jquery.resizestart/archive/master.zip","Homepage/Docs: https://nielse63.github.io/jquery.resizestart/","Demo: https://nielse63.github.io/jquery.resizestart/#demo","Repository: https://github.com/nielse63/jquery.resizestart/"],"shortLink":"http://goo.gl/zVy69r","id":"33hEsbkYY8ouuiE0SMWsGq","slug":"jquery-resizestart"}]